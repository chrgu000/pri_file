<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here."  ResponseEncoding="UTF-8"%>
<%@ Property Name="ActivityName" Type="System.String" Category="Strings" Description="实体名称" %>
<%@ Property Name="itemName" Type="System.String" Category="Strings" Description="item名称" %>
<%@ Property Name="createXmlName" Type="System.String" Category="Strings" Description="item名称" %>
<%@ Property Name="mainXmlName" Type="System.String" Category="Strings" Description="主页面名称" %>
<%@ Property Name="imgName" Type="System.String" Category="Strings" Description="图片列" %>
<%@ Property Name="isCoerceOutImg" Type="System.Boolean" Category="Strings" Description="强制输出图片列" %>
<%@ Property Name="filePath" Type="System.String" Category="Strings" Description="文件位置" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="tableName" %>


package com.hxyc.ui.adapter;

import java.util.ArrayList;
import java.util.List;

import com.hxyc.app.R;
import com.hxyc.bean.<%= ActivityName  %>Info;
import com.hxyc.util.ImageLoadTool;
import com.hxyc.util.ImgUrlTool;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener;

import android.content.Context;
import android.graphics.Bitmap;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

/**
 * 
 * @description <%= SourceTable.Description  %>适配器
 * @author 
 * @date 
 */
public class <%= ActivityName  %>Adapter extends BaseAdapter{
	List<<%= ActivityName  %>Info> infos = new ArrayList<<%= ActivityName  %>Info>();
	public Context mContext;
	ImageLoader imageLoader;
	DisplayImageOptions options;//方图片
	public <%= ActivityName  %>Adapter(Context context,ImageLoader _imageLoader) {
		mContext = context;
		imageLoader=_imageLoader;
	     options = ImageLoadTool.imgOptionsInit(options, R.drawable.img_rectangle);
	}
    @Override
	public int getCount() {
		return infos.size();
	}

	@Override
	public <%= ActivityName  %>Info getItem(int arg0) {
		return infos.get(arg0);
	}

	@Override
	public long getItemId(int arg0) {
		return arg0;
	}
	public void addDataAll(List<<%= ActivityName  %>Info> _infos )
	{
		infos.addAll(_infos);
	}
	public void remove()
	{
		infos.clear();
	}
    @Override
  public View getView(final int position, View convertView, ViewGroup parent) {
    <%= ActivityName  %>Info info = infos.get(position);
    ViewHolder viewHolder = null;
    if (convertView == null) {
      viewHolder = new ViewHolder();
      {
        convertView = LayoutInflater.from(mContext).inflate(
            R.layout.item_list_<%=itemName %>, null);
      }
            <% foreach (ColumnSchema column in SourceTable.Columns) { if(column.IsPrimaryKeyMember||isContinue(column)){continue;} 
             if(column.Name==imgName)
             {%>
              viewHolder.<%=Camel(column.Name) %>Img = (ImageView) convertView
          .findViewById(R.id.item_list_<%=itemName %>_<%=Camel(column.Name) %>_img);
             <%}else{%>
      viewHolder.<%=Camel(column.Name) %>Tv = (TextView) convertView
          .findViewById(R.id.item_list_<%=itemName %>_<%=Camel(column.Name) %>_tv);
             <%}}%> 
               <%if(isCoerceOutImg){%>
                 viewHolder.<%=Camel(imgName) %>Img = (ImageView) convertView
          .findViewById(R.id.item_list_<%=itemName %>_<%=Camel(imgName) %>_img);
           <%} %>
      convertView.setTag(viewHolder);
    } else {
      viewHolder = (ViewHolder) convertView.getTag();
    }
         <% foreach (ColumnSchema column in SourceTable.Columns) { if(column.IsPrimaryKeyMember||isContinue(column)){continue;} 
         if(column.Name==imgName)
             {%>
             String imgUrl=info.get<%= GetUpper(imgName) %>();
         imageLoader.displayImage(imgUrl, viewHolder.<%=Camel(column.Name) %>Img, options,
         new FirstDisplayListener());
              <%}else{%>
             viewHolder.<%=Camel(column.Name) %>Tv.setText(info.get<%=GetUpper(column.Name) %>() <%if(GetJavaTypeUpper(column)!="String"){ %>+""<% }%>);
           
        <%}}%>  
           <%if(isCoerceOutImg){%>
             String imgUrl=ImgUrlTool.getFullImgUrl(info.get<%= GetUpper(imgName) %>());
             imageLoader.displayImage(imgUrl, viewHolder.<%=Camel(imgName) %>Img, options,
              new FirstDisplayListener());
           <%} %>
    return convertView;
  }
     private class FirstDisplayListener extends SimpleImageLoadingListener {
          @Override
          public void onLoadingComplete(String imageUri, View view,
                                        Bitmap loadedImage) {
              if (loadedImage != null) {
              }
          }
      }

  public class ViewHolder {
       <% foreach (ColumnSchema column in SourceTable.Columns) { if(column.IsPrimaryKeyMember||isContinue(column)){continue;}
        if(column.Name==imgName)
        {%>
         /**  <%= column.Description %>*/
          public ImageView <%=Camel(column.Name) %>Img ;
        <%}else{%>
         /** <%= column.Description %>*/
       public TextView <%=Camel(column.Name) %>Tv ;
             <%}}%>    
              <%if(isCoerceOutImg){%>
               public ImageView <%=Camel(imgName) %>Img ;
                <%}%>    
  }
 }
     
<!-- #include file="ScriptTemplate.cst" -->
<script runat="template" >

</script>