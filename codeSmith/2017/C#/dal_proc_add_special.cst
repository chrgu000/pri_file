<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" ResponseEncoding="UTF-8" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="SourceProc" Type="CommandSchema" Category="Context" Description="ProcName" %>


 public override DataSet QueryPageList(int pageIndex, int pageSize, out int retCount)
        {
           
            int startNum = 1;
            int endNum = pageSize;
            if (pageIndex == 1)
            {
                startNum = 1;
            }
            else
            {
                startNum = (pageIndex - 1) * pageSize + 1;
            }
            endNum = pageIndex * pageSize;

            String sql = "<%=SourceProc.Name%>";
            DbCommand storedProcCommand = this.database.GetStoredProcCommand(sql);
            <%
            for(int i=0;i< SourceProc.Parameters.Count;i++)
            {
             ParameterSchema schema=   SourceProc.Parameters[i];
                if(schema.Name.Equals("@totalCount")|| schema.Name.Equals("@RETURN_VALUE"))
                    continue;
                 %> this.database.AddInParameter(storedProcCommand, "<%= schema.Name.Replace("@","") %>", DbType.<%= GetCSDBTypeUpper(schema) %>, <%= schema.Name.Replace("@","") %>);
                
            <% }            %>  
            this.database.AddOutParameter(storedProcCommand, "totalCount", DbType.Int32, 0);
            DataSet ds = this.database.ExecuteDataSet(storedProcCommand);
            retCount = (int)this.database.GetParameterValue(storedProcCommand, "totalCount");
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return ds;
            }
            else
            {
                return null;
            }

        }


<!-- #include file="ScriptTemplate.cst" -->