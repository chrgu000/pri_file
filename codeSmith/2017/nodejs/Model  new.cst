<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here."  ResponseEncoding="UTF-8"%>
<%@ Property Name="NameSpace" Type="System.String" Category="Strings" Description="nameSpace" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="tableName" %>

package com.example.spark_2.model;

import java.io.Serializable;
import java.util.Date;
  	/**
	*备注:<%= SourceTable.Description %>
	*/
    public class <%= SourceTable.Name  %> implements Serializable
    {
        public <%= SourceTable.Name  %>()
        { }
		
		
		<% foreach (ColumnSchema column in SourceTable.Columns) { %>
		/**
		*<%= column.Description %>
		*/
		private <%= GetCSType(column) %>   <%=Camel( column.Name) %>;//<%= column.Description %>
		<% } %>
		<%	foreach (TableKeySchema  key in SourceTable.ForeignKeys){	%>
		private  <%= key.PrimaryKeyTable.Name  %>  <%= Camel(key.PrimaryKeyTable.Name ) %>;
		<%}%>
		
		<% foreach (ColumnSchema column in SourceTable.Columns) { %>
		
		/**
		*<%= column.Description %>
		*/
		public <%= GetCSType(column) %> get<%= column.Name %>()
		{
			 return <%= Camel(column.Name) %>; 
		}
		public void  set<%= column.Name %> (<%= GetCSType(column)%>  _<%= column.Name %> )
		{
			<%= Camel(column.Name) %> = _<%= column.Name %> ;
		}
		
		<% } %>
		
		<%	foreach (TableKeySchema  key in SourceTable.ForeignKeys){	%>
		
		public <%= key.PrimaryKeyTable.Name  %>  get<%= key.PrimaryKeyTable.Name  %>()
		{
		return <%= Camel(key.PrimaryKeyTable.Name ) %>;
		}
		
		public <%= key.PrimaryKeyTable.Name  %>  set<%= key.PrimaryKeyTable.Name  %>(<%= key.PrimaryKeyTable.Name  %>  _<%= key.PrimaryKeyTable.Name  %>)
		{
		return <%= Camel(key.PrimaryKeyTable.Name ) %> =_<%= key.PrimaryKeyTable.Name  %>;
		
		}
		<%}%>

    }


<script runat="template">
// My methods here.

public string Camel(string str)
{

	str=str.Substring(0,1).ToLower()+str.Substring(1);
	
	return str;
}


public static string GetCSType(ColumnSchema column)
		{
			if (column.Name.EndsWith("TypeCode")) return column.Name;
			
			switch (column.DataType)
			{
				case DbType.AnsiString: return "String";
				case DbType.AnsiStringFixedLength: return "String";
				case DbType.Binary: return "byte[]";
				case DbType.Boolean: return "Boolean";
				case DbType.Byte: return "byte";
				case DbType.Currency: return "Double";
				case DbType.Date: return "Date";
				case DbType.DateTime: return "Date";
				case DbType.Decimal: return "Double";
				case DbType.Double: return "Double";
				case DbType.Guid: return "Guid";
				case DbType.Int16: return "short";
				case DbType.Int32: return "Integer";
				case DbType.Int64: return "Long";
				case DbType.Object: return "String";
				case DbType.SByte: return "sbyte";
				case DbType.Single: return "Float";
				case DbType.String: return "String";
				case DbType.StringFixedLength: return "String";
				case DbType.Time: return "TimeSpan";
				case DbType.UInt16: return "ushort";
				case DbType.UInt32: return "uint";
				case DbType.UInt64: return "ulong";
				case DbType.VarNumeric: return "Double";
				default:
				{
					return "__UNKNOWN__" + column.NativeType;
				}
			}
		}
</script>